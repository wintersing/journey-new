<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">

    <!--注解扫描-->
    <context:component-scan base-package="com.lt.journey,com.lt.commons.utils">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
            
    <!--将RedisConfig配置类引入-->
    <bean class="com.lt.journey.config.MainConfig"/>
    <!-- 开启AOP注解扫描 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--rabbit注解驱动-->
    <rabbit:annotation-driven/>
    <!-- 加载db.properties配置文件 -->
    <context:property-placeholder location="classpath:application.properties"/>
    <!-- 定义Druid数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="maxIdle" value="${jdbc.maxIdle}"></property>
    </bean>

    <!-- 注册SqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描mappers.xml文件 -->
        <property name="mapperLocations" value="classpath:com/lt/journey/mapper/*Mapper.xml"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.lt.journey.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 事务管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 开启spring对注解事务的支持-->
    <tx:annotation-driven transaction-manager="txManager"/>

    <!-- 编写通知：对事务进行增强（通知），需要编写对切入点和具体执行事务细节 -->
    <!--<tx:advice id="txAdvice" transaction-manager="txManager">-->
        <!--<tx:attributes>-->
            <!--&lt;!&ndash;-->
                <!--为切入点方法添加事务详情-->
                <!--name：方法名，*表示任意方法名称-->
                <!--propagation：设置传播行为-->
                <!--isolation：设置隔离级别-->
                <!--read-only：是否只读-->
            <!--&ndash;&gt;-->
            <!--<tx:method name="add*" propagation="REQUIRED" isolation="DEFAULT" read-only="false"-->
                       <!--rollback-for="Exception"/>-->
            <!--<tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT" read-only="false"-->
                       <!--rollback-for="Exception"/>-->
            <!--<tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT" read-only="false"-->
                       <!--rollback-for="Exception"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
</beans>